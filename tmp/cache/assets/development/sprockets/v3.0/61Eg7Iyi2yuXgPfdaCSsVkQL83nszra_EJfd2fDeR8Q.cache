I"¨(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Partials.Pages.Home.Sections.Web.Items.Speed = (function(superClass) {
    extend(Speed, superClass);

    function Speed() {
      Speed.__super__.constructor.call(this, 'speed');
      this._arrow = this.find("[data-src='speedometer_arrow']");
      this._arrowLocked = true;
      this.mouseenter((function(_this) {
        return function() {
          if (!_this._arrowLocked) {
            return _this._arrowDown(function() {
              return _this.performAnimation();
            });
          }
        };
      })(this));
    }

    Speed.prototype.performAnimation = function(callback) {
      this._arrowLocked = true;
      this._arrow.attr('class', 'active');
      return setTimeout(((function(_this) {
        return function() {
          _this._arrow.css({
            transform: 'rotateZ(0)'
          });
          _this._arrow.attr('class', '');
          _this._arrowLocked = false;
          return typeof callback === "function" ? callback() : void 0;
        };
      })(this)), 2 * 1500 + 500);
    };

    Speed.prototype._arrowDown = function(callback) {
      var time;
      time = 500;
      this._arrowLocked = true;
      this._arrow.css({
        transition: (time / 1000) + "s",
        transform: 'rotateZ(-225deg)'
      });
      return setTimeout(((function(_this) {
        return function() {
          _this._arrow.removeAttr('style');
          _this._arrowLocked = false;
          return typeof callback === "function" ? callback() : void 0;
        };
      })(this)), time);
    };

    return Speed;

  })(Partials.Pages.Home.Sections.Web.Items.Base);

}).call(this);
:ET